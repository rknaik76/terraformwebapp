# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
parameters:
  - name: TerraformState
    displayName: TerraformState
    type: string
    default: plan
    values:
      - init
      - apply
      - plan
      - destroy

pool:
  name: 'home_windows'

variables:
- group: ACCESS_DETAILS

stages:
- stage: Build
  displayName:  Build
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: CopyFiles@2
      inputs:
        Contents: '*.tf'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in **/*.tf'
      inputs:
        rootDirectory: '$(Build.ArtifactStagingDirectory)'
        targetFiles: |
         *.tf
        tokenPrefix: '__'
        tokenSuffix: '__'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop

- stage: Deploy
  displayName: Init
  jobs:
    - job: Terraformdeploy
      steps:
        - download: none
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'specific'
            downloadPath: '$(Build.ArtifactStagingDirectory)'
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '0.15.5'
        - task: TerraformTaskV2@2
          displayName: Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Azure Pass - Sponsorship(6b0b3e01-c26a-4b1e-8433-e649fc0a71ec)'
            backendAzureRmResourceGroupName: 'terraform'
            backendAzureRmStorageAccountName: 'terraformstorage1001'
            backendAzureRmContainerName: 'terraformwebapp'
            backendAzureRmKey: '$(Build.ArtifactStagingDirectory)/drop/terraform.tfstate'


- stage: Deploy
  displayName: Plan
  jobs:
    - job: TerraformPlan
      steps:
        - download: none
        - task: TerraformTaskV2@2
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-input=false -var "client_id=$(TF_VAR_client_id)" -var "client_secret=$(TF_VAR_client_secret)" -var "subscription_id=$(TF_VAR_subscription_id)" -var "tenant_id=$(TF_VAR_tenant_id)" -var "environment=production"'
            environmentServiceNameAzureRM: 'Azure Pass - Sponsorship(6b0b3e01-c26a-4b1e-8433-e649fc0a71ec)'