name: '$(Build.DefinitionName)_$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)'
trigger:
  branches:
    include:
    - master
parameters:

- name: TerraformState
  displayName: TerraformState
  type: string
  default: apply
  values:
  - init
  - apply
  - plan
  - destroy

pool:
  name: 'DI-EDP'
#  demands:
#  - agent.name -equals GX-ZWEAPPPWV134-Agent2
variables:
- group: ACCESS_DETAILS

stages:
- stage: BuildApp
  jobs:
  - job: TerraformBuild
    steps:
    # - task: 30f35852-3f7e-4c0c-9a88-e127b4f97211@1
    #   condition: false
    #   inputs:
    #     alias: none
    - task: CopyFiles@2
      inputs:
        Contents: '*.tf'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in **/*.tf'
      inputs:
        rootDirectory: '$(Build.ArtifactStagingDirectory)'
        targetFiles: |
         *.tf
        tokenPrefix: '__'
        tokenSuffix: '__'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop


- stage: ApplyCultivateNGCInfrastructure

  jobs:

    - job: TerraformPlan
      condition: eq('${{parameters.TerraformState}}', 'plan')
      steps:

      - download: none

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          downloadPath: '$(WORKING_DIRECTORY)'
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '0.14.7'

      - task: PwC NextGen Cloud Create ngc.auto.tfvars File@3
        inputs:
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'


      - task: PwC NextGen Cloud TFE Deploy@3
        inputs:
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'
      - script: git reset --hard HEAD

    - job: TerraformDeploy
      condition: eq('${{parameters.TerraformState}}', 'apply')
      steps:

      - download: none

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          downloadPath: '$(WORKING_DIRECTORY)'
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '0.14.7'

      - task: PwC NextGen Cloud Create ngc.auto.tfvars File@3
        inputs:
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'

      - task: PwC NextGen Cloud TFE Deploy@3
        inputs:
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'
      - script: git reset --hard HEAD

    - job: TerraformDestroy
      condition: eq('${{parameters.TerraformState}}', 'destroy')
      steps:

      - download: none

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          downloadPath: '$(WORKING_DIRECTORY)'
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '0.14.7'

      - task: PwC NextGen Cloud Create ngc.auto.tfvars File@3
        inputs:
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'

      - task: PwC NextGen Cloud TFE Deploy@3
        inputs:
          TERRAFORM_COMMAND: ${{ parameters.TerraformState }} -auto-approve
          TF_VAR_subscription_id: '$(TF_VAR_subscription_id)'
          WORKING_DIRECTORY: '$(WORKING_DIRECTORY)/drop/'
          TF_VAR_client_id: '$(TF_VAR_client_id)'
          TF_VAR_client_secret: '$(TF_VAR_client_secret)'
          TF_VAR_tenant_id: '$(TF_VAR_tenant_id)'
      - script: git reset --hard HEAD
